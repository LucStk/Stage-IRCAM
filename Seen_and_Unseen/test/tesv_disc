
import tensorflow as tf
import numpy as np
#from utilitaires.All_model import *
import tensorflow.keras.activations  as act
import tensorflow.keras as ks
import tensorflow.keras.layers as layers

from tensorflow.compat.v1 import ConfigProto
from tensorflow.compat.v1 import InteractiveSession
import os
MEAN_DATASET = -6.0056405
STD_DATASET  = 2.4420118
config = ConfigProto()
config.gpu_options.allow_growth = True
session = InteractiveSession(config=config)

act_conv  = act.elu
act_dense = act.elu

conv = tf.keras.models.Sequential([
        layers.InputLayer(input_shape=(80,1)),

        layers.Conv1D(256, 20, activation=act_conv),
        layers.MaxPool1D(pool_size=7),
        layers.BatchNormalization(),
        
        layers.Conv1D(64, 8, activation=act_conv),
    ])


x = tf.ones((10,32,1))

conv = tf.keras.models.Sequential([
        layers.InputLayer(input_shape=(32,1)),
        layers.Conv1D(128, 4, activation=act_conv),
        layers.MaxPool1D(pool_size=2),
        layers.BatchNormalization(),

        layers.Conv1D(64, 4, activation=act_conv),
        layers.MaxPool1D(pool_size=2),
        layers.BatchNormalization(),

        layers.Conv1D(16, 5, activation=act_conv),
    ])

conv(x).shape

x = tf.ones((10,1,16+10))

convT = tf.keras.models.Sequential([
        layers.InputLayer(input_shape=(1, 16+10)),

        layers.Conv1DTranspose(256, 4, activation=act_conv),
        layers.BatchNormalization(),
        layers.UpSampling1D(size=4),

        layers.Conv1DTranspose(128, 4, activation=act_conv),
        layers.BatchNormalization(),
        layers.UpSampling1D(size=4),

        layers.Conv1DTranspose(1, 5, activation=act_conv),
    ])

convT(x).shape

